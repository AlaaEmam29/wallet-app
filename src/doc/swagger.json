{
    "openapi": "3.0.0",
    "info": {
        "title": "Axis Pay API",
        "description": "API documentation for Axis Pay financial services backend",
        "version": "1.0.0",
        "contact": {
            "name": "Axis Pay Support",
            "email": "support@axisapp.com"
        }
    },
    "servers": [
        {
            "url": "http://localhost:3000",
            "description": "Local Development Server"
        }
    ],
    "tags": [
        {
            "name": "Authentication",
            "description": "User registration, login, and password management"
        },
        {
            "name": "Accounts",
            "description": "Financial account management operations"
        },
        {
            "name": "Transactions",
            "description": "Financial transaction operations and history"
        }
    ],
    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": ["Authentication"],
                "summary": "Register a new user",
                "description": "Creates a new user account with the provided personal information",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "nationalId": {
                                            "type": "string",
                                            "example": "30111111111110"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": ["Authentication"],
                "summary": "Authenticate user",
                "description": "Authenticates a user with Mobile Number and password, returns JWT token",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/change-password": {
            "post": {
                "tags": ["Authentication"],
                "summary": "Change user password",
                "description": "Changes the password for the authenticated user",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password changed successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/accounts": {
            "post": {
                "tags": ["Accounts"],
                "summary": "Create a new account",
                "description": "Creates a new financial account with the provided National ID and optional initial deposit",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAccountRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Account created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Account created successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Account already exists",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/accounts/{accountId}": {
            "get": {
                "tags": ["Accounts"],
                "summary": "Get account details",
                "description": "Retrieves detailed information about a specific account",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "description": "Egyptian National ID associated with the account",
                        "schema": {
                            "type": "string",
                            "pattern": "^([2-3])([0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])([0-9]{7})$",
                            "example": "30111111111110"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/accounts/{accountId}/balance": {
            "get": {
                "tags": ["Accounts"],
                "summary": "Get account balance",
                "description": "Retrieves the current balance of a specific account",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "description": "Egyptian National ID associated with the account",
                        "schema": {
                            "type": "string",
                            "pattern": "^([2-3])([0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])([0-9]{7})$",
                            "example": "30111111111110"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account balance retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "accountId": {
                                            "type": "string",
                                            "example": "30111111111110"
                                        },
                                        "balance": {
                                            "type": "number",
                                            "example": 50000
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/accounts/{accountId}/deposit": {
            "post": {
                "tags": ["Accounts"],
                "summary": "Deposit funds",
                "description": "Deposits funds into a specific account",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "description": "Egyptian National ID associated with the account",
                        "schema": {
                            "type": "string",
                            "pattern": "^([2-3])([0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])([0-9]{7})$",
                            "example": "30111111111110"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Funds deposited successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "transactionId": {
                                            "type": "string",
                                            "example": "1686047123456abcdef"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Funds deposited successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/accounts/{accountId}/withdraw": {
            "post": {
                "tags": ["Accounts"],
                "summary": "Withdraw funds",
                "description": "Withdraws funds from a specific account",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "description": "Egyptian National ID associated with the account",
                        "schema": {
                            "type": "string",
                            "pattern": "^([2-3])([0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])([0-9]{7})$",
                            "example": "30111111111110"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Funds withdrawn successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "transactionId": {
                                            "type": "string",
                                            "example": "1686047123456abcdef"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Funds withdrawn successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error or insufficient funds",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/accounts/{accountId}/transactions": {
            "get": {
                "tags": ["Accounts"],
                "summary": "Get account transactions",
                "description": "Retrieves transaction history for a specific account",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "description": "Egyptian National ID associated with the account",
                        "schema": {
                            "type": "string",
                            "pattern": "^([2-3])([0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])([0-9]{7})$",
                            "example": "30111111111110"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account transactions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Transaction"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/transactions/account/{accountId}": {
            "get": {
                "tags": ["Transactions"],
                "summary": "Get transactions for account",
                "description": "Retrieves transactions for a specific account with optional filtering",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "description": "Egyptian National ID associated with the account",
                        "schema": {
                            "type": "string",
                            "pattern": "^([2-3])([0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])([0-9]{7})$",
                            "example": "30111111111110"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "description": "Filter by transaction type",
                        "schema": {
                            "type": "string",
                            "enum": ["deposit", "withdrawal", "transfer"]
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "required": false,
                        "description": "Filter by start date (ISO format)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2025-01-01T00:00:00Z"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "required": false,
                        "description": "Filter by end date (ISO format)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2025-12-31T23:59:59Z"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "description": "Maximum number of transactions to return",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 20
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "description": "Number of transactions to skip (for pagination)",
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transactions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Transaction"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/transactions/{transactionId}": {
            "get": {
                "tags": ["Transactions"],
                "summary": "Get transaction by ID",
                "description": "Retrieves details of a specific transaction",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "transactionId",
                        "in": "path",
                        "required": true,
                        "description": "Unique identifier of the transaction",
                        "schema": {
                            "type": "string",
                            "example": "1686047123456abcdef"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServerError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "description": "JWT token obtained from the /api/auth/login endpoint"
            }
        },
        "schemas": {
            "RegisterRequest": {
                "type": "object",
                "required": [
                    "nationalId",
                    "mobileNumber",
                    "firstName",
                    "lastName",
                    "email",
                    "governorate",
                    "city",
                    "address",
                    "idExpiryDate",
                    "password"
                ],
                "properties": {
                    "nationalId": {
                        "type": "string",
                        "description": "Egyptian National ID (14 digits)",
                        "pattern": "^([2-3])([0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])([0-9]{7})$",
                        "example": "30111111111110"
                    },
                    "mobileNumber": {
                        "type": "string",
                        "description": "Egyptian mobile number",
                        "pattern": "^01(0|1|2|5){1}[0-9]{8}$",
                        "example": "01012345670"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "User's first name",
                        "minLength": 2,
                        "example": "Alaa"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "User's last name",
                        "minLength": 2,
                        "example": "Emam"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "User's email address",
                        "example": "test@example.com"
                    },
                    "governorate": {
                        "type": "string",
                        "description": "User's governorate",
                        "minLength": 2,
                        "example": "Cairo"
                    },
                    "city": {
                        "type": "string",
                        "description": "User's city",
                        "minLength": 2,
                        "example": "Nasr City"
                    },
                    "address": {
                        "type": "string",
                        "description": "User's address",
                        "minLength": 5,
                        "example": "123 Main Street, Apt 4"
                    },
                    "occupation": {
                        "type": "string",
                        "description": "User's occupation (optional)",
                        "example": "Software Engineer"
                    },
                    "idExpiryDate": {
                        "type": "string",
                        "format": "date",
                        "description": "National ID expiry date",
                        "example": "2030-12-31"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password (min 8 characters)",
                        "format": "password",
                        "minLength": 8,
                        "example": "Password1234"
                    }
                }
            },
            "LoginRequest": {
                "type": "object",
                "required": ["mobileNumber", "password"],
                "properties": {
                    "mobileNumber": {
                        "type": "string",
                        "description": "Egyptian mobile number",
                        "pattern": "^01(0|1|2|5){1}[0-9]{8}$",
                        "example": "01012345670"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password",
                        "format": "password",
                        "example": "Password1234"
                    }
                }
            },
            "ChangePasswordRequest": {
                "type": "object",
                "required": ["currentPassword", "newPassword"],
                "properties": {
                    "currentPassword": {
                        "type": "string",
                        "description": "User's current password",
                        "format": "password",
                        "example": "Password1234"
                    },
                    "newPassword": {
                        "type": "string",
                        "description": "User's new password (min 8 characters)",
                        "format": "password",
                        "minLength": 8,
                        "example": "NewPassword456"
                    }
                }
            },
            "CreateAccountRequest": {
                "type": "object",
                "required": ["nationalId"],
                "properties": {
                    "nationalId": {
                        "type": "string",
                        "description": "Egyptian National ID (14 digits)",
                        "pattern": "^([2-3])([0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])([0-9]{7})$",
                        "example": "30111111111110"
                    },
                    "initialDeposit": {
                        "type": "number",
                        "description": "Initial deposit amount",
                        "minimum": 0,
                        "default": 0,
                        "example": 50000
                    }
                }
            },
            "TransactionRequest": {
                "type": "object",
                "required": ["amount"],
                "properties": {
                    "amount": {
                        "type": "number",
                        "description": "Transaction amount",
                        "minimum": 1,
                        "example": 10000
                    },
                    "description": {
                        "type": "string",
                        "description": "Transaction description (optional)",
                        "example": "Salary deposit"
                    },
                    "reference": {
                        "type": "string",
                        "description": "Transaction reference (optional)",
                        "example": "REF123456"
                    }
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "nationalId": {
                        "type": "string",
                        "example": "30111111111110"
                    },
                    "mobileNumber": {
                        "type": "string",
                        "example": "01012345670"
                    },
                    "firstName": {
                        "type": "string",
                        "example": "Alaa"
                    },
                    "lastName": {
                        "type": "string",
                        "example": "Emam"
                    },
                    "email": {
                        "type": "string",
                        "example": "test@example.com"
                    },
                    "governorate": {
                        "type": "string",
                        "example": "Cairo"
                    },
                    "city": {
                        "type": "string",
                        "example": "Nasr City"
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main Street, Apt 4"
                    },
                    "occupation": {
                        "type": "string",
                        "example": "Software Engineer"
                    },
                    "idExpiryDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2030-12-31T00:00:00.000Z"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-06-01T10:30:00.000Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-06-01T10:30:00.000Z"
                    }
                }
            },
            "Account": {
                "type": "object",
                "properties": {
                    "nationalId": {
                        "type": "string",
                        "example": "30111111111110"
                    },
                    "balance": {
                        "type": "number",
                        "example": 50000
                    },
                    "status": {
                        "type": "string",
                        "enum": ["active", "suspended", "closed"],
                        "example": "active"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-06-01T10:30:00.000Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-06-01T10:30:00.000Z"
                    }
                }
            },
            "Transaction": {
                "type": "object",
                "properties": {
                    "transactionId": {
                        "type": "string",
                        "example": "1686047123456abcdef"
                    },
                    "accountId": {
                        "type": "string",
                        "example": "30111111111110"
                    },
                    "type": {
                        "type": "string",
                        "enum": ["deposit", "withdrawal", "transfer"],
                        "example": "deposit"
                    },
                    "amount": {
                        "type": "number",
                        "example": 10000
                    },
                    "description": {
                        "type": "string",
                        "example": "Salary deposit"
                    },
                    "reference": {
                        "type": "string",
                        "example": "REF123456"
                    },
                    "status": {
                        "type": "string",
                        "enum": ["pending", "completed", "failed", "reversed"],
                        "example": "completed"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-06-01T10:30:00.000Z"
                    }
                }
            },
            "ValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "https://httpstatus.in/400"
                    },
                    "title": {
                        "type": "string",
                        "example": "Validation Failed"
                    },
                    "status": {
                        "type": "integer",
                        "example": 400
                    },
                    "detail": {
                        "type": "string",
                        "example": "Invalid input data provided."
                    },
                    "instance": {
                        "type": "string",
                        "example": "/api/accounts"
                    },
                    "validationErrors": {
                        "type": "object",
                        "example": {
                            "nationalId": "National ID must be a valid 14-digit Egyptian National ID"
                        }
                    }
                }
            },
            "AuthError": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "https://httpstatus.in/401"
                    },
                    "title": {
                        "type": "string",
                        "example": "Authentication Failed"
                    },
                    "status": {
                        "type": "integer",
                        "example": 401
                    },
                    "detail": {
                        "type": "string",
                        "example": "Invalid or expired authentication token."
                    },
                    "instance": {
                        "type": "string",
                        "example": "/api/accounts/30111111111110/balance"
                    }
                }
            },
            "NotFoundError": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "https://httpstatus.in/404"
                    },
                    "title": {
                        "type": "string",
                        "example": "Resource Not Found"
                    },
                    "status": {
                        "type": "integer",
                        "example": 404
                    },
                    "detail": {
                        "type": "string",
                        "example": "Account not found."
                    },
                    "instance": {
                        "type": "string",
                        "example": "/api/accounts/30111111111110"
                    }
                }
            },
            "ConflictError": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "https://httpstatus.in/409"
                    },
                    "title": {
                        "type": "string",
                        "example": "Resource Already Exists"
                    },
                    "status": {
                        "type": "integer",
                        "example": 409
                    },
                    "detail": {
                        "type": "string",
                        "example": "Account with National ID 30111111111110 already exists."
                    },
                    "instance": {
                        "type": "string",
                        "example": "/api/accounts"
                    }
                }
            },
            "ServerError": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "https://httpstatus.in/500"
                    },
                    "title": {
                        "type": "string",
                        "example": "Internal Server Error"
                    },
                    "status": {
                        "type": "integer",
                        "example": 500
                    },
                    "detail": {
                        "type": "string",
                        "example": "An unexpected error occurred."
                    },
                    "instance": {
                        "type": "string",
                        "example": "/api/accounts"
                    }
                }
            }
        }
    }
}
